upstream media-downloader {
  least_conn;
  server host-gateway:3000;
}

server {
        listen 80;
        listen [::]:80;
        server_name ${DOMAIN};

        client_max_body_size 50M;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }

        location / {
                rewrite ^ https://${DOLLAR}host${DOLLAR}request_uri? permanent;
        }

        location /api/ {
                rewrite ^ https://${DOLLAR}host${DOLLAR}request_uri? permanent;
        }
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ${DOMAIN};

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

        ssl_buffer_size 8k;

        client_max_body_size 50M;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;


        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files ${DOLLAR}uri ${DOLLAR}uri/ /index.html;
        }

        # # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files ${DOLLAR}uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files ${DOLLAR}uri =404;
        }

        location /media/ {
                proxy_pass http://media-downloader/;
                proxy_buffering on;
        }
}